#!/bin/bash -

SCRIPT_DIR=$(cd $(dirname $0) && pwd)
SCRIPT_NAME=$(basename $0)
SCRIPT_PATH="${SCRIPT_DIR}/${SCRIPT_NAME}"

GITBIN=$(which -a git | grep -v "${SCRIPT_PATH}" | head -1)

if [ ! -x $GITBIN ]; then
    echo "Please install Git first."
    exit 1
fi

SSH_CONFIG_FILE=~/.ssh/config
if [ ! -f $SSH_CONFIG_FILE ]; then
    echo "The file ${SSH_CONFIG_FILE} does not exist, please create it first."
    exit 1
fi

CONFIG_PREFIX="# Generated by git-multiple-ssh. DO NOT EDIT."
DOMAIN_GITHUB="github.com"

parse_cfg_account() {
    echo $1 | awk '{print $8}'
}

parse_cfg_host() {
    echo $1 | awk '{print $9}'
}

parse_cfg_username() {
    echo $1 | awk '{print $10}'
}

parse_cfg_email() {
    echo $1 | awk '{print $11}'
}

make_cfg_line() {
    echo "$CONFIG_PREFIX $1 $2 $3 $4"
}

update_cfg_line() {
    if [[ "$(uname)" == "Darwin" ]]; then
        sed -i '' "${1}s/.*/${2}/" "${SSH_CONFIG_FILE}"
    else
        sed -i "${1}s/.*/${2}/" "${SSH_CONFIG_FILE}"
    fi
}

write_cfg_line() {
    if [ "$(uname)" == "Darwin" ]; then
        sed -i '' "${1}i\\
${2}
" "$SSH_CONFIG_FILE"
    else
        sed -i "${1}i\\
${2}
" "$SSH_CONFIG_FILE"
    fi
}

write_ssh_config() {
    echo "" >> $SSH_CONFIG_FILE
    make_cfg_line "$2" "$3" "$4" "$5" >> $SSH_CONFIG_FILE
    echo "Host $3" >> $SSH_CONFIG_FILE
    echo "    User git" >> $SSH_CONFIG_FILE
    echo "    Hostname $DOMAIN_GITHUB" >> $SSH_CONFIG_FILE
    echo "    IdentityFile $1" >> $SSH_CONFIG_FILE
}

print_usage() {
    echo "Usage: git ssh <github account> <ssh key file> [git user.name] [git user.email]"
    echo ""
    exit 1
}

print() {
    echo "git-multiple-ssh: $1"
}

command_ssh() {
    local account=$1
    local key_file=$2
    local username=$3
    local email=$4

    if [ -z "$account" ] || [ -z "$key_file" ]; then
        print "Invalid arguments."
        echo ""
        print_usage
    fi

    if [ ! -f "$key_file" ]; then
        print "The file ${key_file} does not exist."
        echo ""
        print_usage
    fi

    local key_name=`basename "$key_file"`
    local host="$key_name.$DOMAIN_GITHUB"

    local i=0
    while read line
    do
        i=`expr $i + 1`
        local cfg_line=`echo $line | grep "$CONFIG_PREFIX" | grep "$host"`
        if [ ! -z "$cfg_line" ]; then
            local cfg_host=`parse_cfg_host "$line"`
            if [ "$host" == "$cfg_host" ]; then
                local cfg_account=`parse_cfg_account "$line"`
                local new_line=`make_cfg_line "$account" "$host" "$username" "$email"`
                if [ "$cfg_account" == "$account" ]; then
                    update_cfg_line $i "$new_line"
                    print "Update $account"
                else
                    write_cfg_line $i "$new_line"
                    print "Add $account"
                fi
                exit $?
            fi
        else
            local ssh_host_line=`echo $line | grep -i "Host ${host}"`
            if [ ! -z "$ssh_host_line" ]; then
                local new_line=`make_cfg_line "$account" "$host" "$username" "$email"`
                write_cfg_line $i "$new_line"
                print "Add $account"
                exit $?
            fi
        fi
    done < $SSH_CONFIG_FILE

    write_ssh_config "$key_file" "$account" "$host" "$username" "$email"
    print "Init $account"
    exit $?
}


# Handle ssh command
if [ "$1" == "ssh" ]; then
    command_ssh "$2" "$3" "$4" "$5"
fi

# Handle clone command
if [ "$1" != "clone" ]; then
    $GITBIN "$@"
    exit $?
fi

git_url=""

for arg in "$@"
do
    if [[ $arg == git@* ]]
    then
       git_url=$arg
       break
    fi
done

if [ -z "$git_url" ]; then
    $GITBIN "$@"
    exit $?
fi

if ! echo "$git_url" | grep -q "github.com:"; then
    $GITBIN "$@"
    exit $?
fi

git_account=$(echo "$git_url" | cut -d ':' -f 2 | cut -d '/' -f 1)
git_repo=$(echo "$git_url" | cut -d ':' -f 2 | cut -d '/' -f 2 | cut -d '.' -f 1)

if [ -z "$git_repo" ] || [ -z "$git_account" ]; then
    $GITBIN "$@"
    exit $?
fi

# Find config
cfg_account=""
cfg_host=""
cfg_username=""
cfg_email=""

while read line
do
    cfg_line=`echo $line | grep "$CONFIG_PREFIX"`
    if [ ! -z "$cfg_line" ]; then
        account=`parse_cfg_account "$line"`
        if [ "$account" == "$git_account" ]; then
            cfg_account=$account
            cfg_host=`parse_cfg_host "$line"`
            cfg_username=`parse_cfg_username "$line"`
            cfg_email=`parse_cfg_email "$line"`
            break
        fi
    fi
done < $SSH_CONFIG_FILE

if [ -z "$cfg_account" ]; then
    $GITBIN "$@"
    exit $?
else
    print "Match $cfg_account"
fi

# Changing host
if [ ! -z "$cfg_host" ]; then
    print "Replace $DOMAIN_GITHUB -> $cfg_host"
    args=`echo "$@" | sed "s/git@$DOMAIN_GITHUB:/git@$cfg_host:/"`
else
    print "Not replaced"
    args="$@"
fi

# Execute real git command
$GITBIN $args

# Set git config
if [ $? == 0 ]; then
    cd $git_repo
    if [ ! -z "$cfg_username" ]; then
        print "git config user.name $cfg_username"
        $GITBIN config user.name $cfg_username
    fi

    if [ ! -z "$cfg_email" ]; then
        print "git config user.email $cfg_email"
        $GITBIN config user.email $cfg_email
    fi

    print "Done."
fi
